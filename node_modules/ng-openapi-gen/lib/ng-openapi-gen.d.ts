import { OpenAPIObject } from '@loopback/openapi-v3-types';
import { Globals } from './globals';
import { HandlebarsManager } from './handlebars-manager';
import { Model } from './model';
import { Operation } from './operation';
import { Options } from './options';
import { Service } from './service';
import { Templates } from './templates';
/**
 * Main generator class
 */
export declare class NgOpenApiGen {
    openApi: OpenAPIObject;
    options: Options;
    globals: Globals;
    handlebarsManager: HandlebarsManager;
    templates: Templates;
    models: Map<string, Model>;
    services: Map<string, Service>;
    operations: Map<string, Operation>;
    outDir: string;
    tempDir: string;
    constructor(openApi: OpenAPIObject, options: Options);
    /**
     * Actually generates the files
     */
    generate(): void;
    private write;
    private initHandlebars;
    private readTemplates;
    private readRootUrl;
    private readModels;
    private readServices;
    private ignoreUnusedModels;
    private collectDependencies;
    private allReferencedNames;
}
/**
 * Parses the command-line arguments, reads the configuration file and run the generation
 */
export declare function runNgOpenApiGen(): Promise<void>;
